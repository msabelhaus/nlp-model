# Modulesimport picklefrom sklearn.datasets import fetch_20newsgroupsfrom sklearn.model_selection import train_test_splitfrom sklearn.feature_extraction.text import TfidfVectorizerfrom sklearn.metrics import classification_reportimport configdef predict_test():    """    Predicting classification of test posts    """        # path to model    model_path = f"{config.MODEL_DIR}/"      # Load in data    news = fetch_20newsgroups(subset="all")        # Extract the messages and topic labels, and view the topic labels    text = news["data"]    target = news["target"]    # Train/test split    X_train, X_test, y_train, y_test = train_test_split(text, target, random_state=0)    tfidfer = TfidfVectorizer()    tfidfer.fit(X_train)    X_test_tfidf = tfidfer.transform(X_test)    # Load the trained classifier    filename = 'MNB_trained.sav'    mnb = pickle.load(open(model_path + filename, 'rb'))    predictions = mnb.predict(X_test_tfidf)    return predictions, y_testif __name__ == "__main__":    """    Prints classification report of test set predictions    """    y_pred, y_test = predict_test()        print("Results for MBD")    print("-"*60)    print(classification_report(y_test, y_pred))    print("-"*60)